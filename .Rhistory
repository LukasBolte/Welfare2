freq_table <- table(data$arkansas)
source("~/Documents/GitHub/Welfare2/data_analysis_2024_04_21.R")
freq_table <- table(data$arkansas)
# Calculate the share of each value
share_values <- prop.table(freq_table)
# Print the share of each value
print(share_values)
calculate_share_summary(filtered_data, warhol)
calculate_share_summary(filtered_data, experience)
calculate_share_summary(filtered_data, arkansas)
calculate_share_summary(data_for_unincentivized_types, unincentivized_types)
source("~/Documents/GitHub/Welfare2/data_analysis_2024_04_21.R")
data$ES_bin
filtered_data$ES_bin
filtered_data[filtered_data$experience=="MS"]
filtered_data[filtered_data$experience=="MS",]
filtered_data[filtered_data$experience=="MS",MS_bin]
filtered_data[filtered_data$experience=="MS",]$MS_bin
mean(filtered_data[filtered_data$experience=="MS",]$MS_bin)
t.test(mean(filtered_data[filtered_data$experience=="MS",]$MS_bin),mean(filtered_data[filtered_data$experience=="ES",]$MS_bin))
t.test(filtered_data[filtered_data$experience=="MS",]$MS_bin,filtered_data[filtered_data$experience=="ES",]$MS_bin)
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$MS_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$MS_bin)
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$MS_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$ES_bin)
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$MS_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$MS_bin)
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$ES_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$ES_bin)
t.test(filtered_data[filtered_data$experience=="MS",]$MS_bin,filtered_data[filtered_data$experience=="ES",]$MS_bin)
t.test(filtered_data[filtered_data$experience=="MS",]$ES_bin,filtered_data[filtered_data$experience=="ES",]$ES_bin)
t.test(filtered_data[filtered_data$arkansas=="MS",]$MS_bin,filtered_data[filtered_data$arkansas=="ES",]$MS_bin)
t.test(filtered_data[filtered_data$arkansas=="MS",]$ES_bin,filtered_data[filtered_data$arkansas=="ES",]$ES_bin)
t.test(filtered_data[filtered_data$warhol=="MS",]$MS_bin,filtered_data[filtered_data$warhol=="ES",]$MS_bin)
t.test(filtered_data[filtered_data$warhol=="MS",]$ES_bin,filtered_data[filtered_data$warhol=="ES",]$ES_bin)
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$ES_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$ES_bin,alternative = 'greater')
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$ES_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$ES_bin,alternative = 'small')
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$ES_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$ES_bin,alternative = 'less')
p1 <- plot_cdf(data, ES_wtp)
ggsave(file.path("Output", folder_name, "Figure1a.png"), plot = p1, width = 5, height = 3, units = "in", bg='white')
theme_set(theme_minimal(base_family = "CMU Serif"))
plot_cdf <- function(data, x_variable) {
ggplot(data, aes(x = {{x_variable}}, color = treatment, linetype = treatment)) +
stat_ecdf(geom = "step", linewidth = 1) +
scale_x_continuous(breaks = c(0, 50, 100, 150, 200), labels = c(0, 50, 100, 150, 200)) +
scale_y_continuous(breaks = seq(0, 1, 0.2), labels = sprintf("%.1f", seq(0, 1, 0.2)),
minor_breaks = seq(0, 1, 0.1)) +
labs(x = "Values") +
theme(axis.title.y = element_blank(),
axis.text.x = element_text(size = 12),  # Set font size to 12pt for x-axis labels
axis.text.y = element_text(size = 12),  # Set font size to 12pt for y-axis labels
axis.ticks.x = element_line(color = "black", size = 0.5),  # Add small ticks at x-axis labels
axis.ticks.y = element_line(color = "black", size = 0.5),  # Add small ticks at y-axis labels
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_blank(),
panel.border = element_rect(color = "black", fill = NA, size = 1),
legend.background = element_rect(color = "black", fill = NA, size = 1)) +
scale_color_manual(values = c("Baseline" = "lightgrey", "LowMS" = "black", "HighMS" = "black"),
breaks = c("Baseline", "LowMS", "HighMS"),
labels = c("Baseline", "LowMS", "HighMS")) +
scale_linetype_manual(values = c("Baseline" = "solid", "LowMS" = "longdash", "HighMS" = "solid"),
breaks = c("Baseline", "LowMS", "HighMS"),
labels = c("Baseline", "LowMS", "HighMS")) +
guides(color = guide_legend()) +
theme(legend.position = c(0.8, 0.35), legend.title = element_blank(),
legend.text = element_text(size = 12),  # Set font size to 12pt for legend
legend.key.size = unit(1.5, "lines"),
legend.key.height = unit(2, "lines"),
legend.key.width = unit(4, "lines"),
axis.title.x = element_text(size=12))
}
# Example usage
p1 <- plot_cdf(data, ES_wtp)
ggsave(file.path("Output", folder_name, "Figure1a.png"), plot = p1, width = 5, height = 3, units = "in", bg='white')
p1 <- plot_cdf(data, Trad_wtp)
ggsave(file.path("Output", folder_name, "Figure1b.png"), plot = p1, width = 5, height = 3, units = "in", bg='white')
source("~/Documents/GitHub/Welfare2/data_analysis_2024_04_21.R")
t.test(filtered_data[filtered_data$experience=="MS",]$MS_bin,filtered_data[filtered_data$experience=="ES",]$MS_bin)
t.test(filtered_data[filtered_data$experience=="MS",]$ES_bin,filtered_data[filtered_data$experience=="ES",]$ES_bin)
t.test(filtered_data[filtered_data$warhol=="MS",]$MS_bin,filtered_data[filtered_data$warhol=="ES",]$MS_bin)
t.test(filtered_data[filtered_data$warhol=="MS",]$ES_bin,filtered_data[filtered_data$warhol=="ES",]$ES_bin)
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$MS_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$MS_bin)
t.test(data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="MS",]$ES_bin,data_for_unincentivized_types[data_for_unincentivized_types$unincentivized_types=="ES",]$ES_bin)
source("~/Documents/GitHub/Welfare2/data_analysis_2024_04_21.R")
